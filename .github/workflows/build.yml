name: build
on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 1 */3 *"
  workflow_dispatch:
    inputs:
      deploy:
        type: boolean
        description: Whether to deploy the build images
jobs:
  build:
    if: "!(github.event_name == 'push' && contains(github.event.head_commit.message, '[skip ci]'))"
    strategy:
      matrix:
        include:
          - scheme: full
            os: alpine
            name: texlive-alpine
            tags: texlive-alpine,texlive-full
          - scheme: full
            os: debian
            name: texlive-debian
            tag: texlive-debian
          - scheme: small
            os: alpine
            name: texlive-alpine-small
            tags: texlive-alpine-small,texlive-small
    name: Build TeXLive [${{ matrix.name }}]
    runs-on: ubuntu-latest
    steps:
      - name: Get tags
        run: |
          versions=("$(date "+%Y%m%d")" "latest")

          TAGS=""
          IFS=',' read -ra tag_array <<< "${{ matrix.tags }}"
          for tag in "${tag_array[@]}"; do
              for ver in "${versions[@]}"; do
                  TAGS+="ghcr.io/xu-cheng/$tag:$ver,"
              done
          done
          TAGS="${TAGS%,}" # Remove trailing comma
          echo "TAGS=$TAGS" >>"$GITHUB_ENV"
      - name: Set up Git repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.${{ matrix.os }}
          build-args: scheme=${{ matrix.scheme }}
          tags: ${{ matrix.name }}
          load: true
      - name: Test pdflatex
        run: |
          docker run --rm {{ $matrix.name }} pdflatex --version
          cat <<EOF >ref.bib
          @book{knuth1997,
            author    = {Donald E. Knuth},
            title     = {The Art of Computer Programming},
            volume    = {1},
            publisher = {Addison-Wesley},
            year      = {1997}
          }
          EOF
          cat <<EOF >test.tex
          \documentclass{article}
          \usepackage{newtxtext}
          \usepackage[style=authoryear]{biblatex}
          \addbibresource{ref.bib}
          \begin{document}
          Test~\cite{knuth1997}.

          \printbibliography
          \end{document}
          EOF
          docker run --rm -v "$(pwd):/data" -w /data ${{ matrix.name }} \
            python3 /opt/texlive/bin/texliveonfly \
            -c latexmk -a "-g -pdf -halt-on-error -interaction=nonstopmode" test.tex
          file test.pdf | grep -q ' PDF '
      - name: Test latexindent
        run: |
          cat <<EOF >test.tex
          \documentclass{article}
          \usepackage{newtxtext}
          \begin{document}
          test
          \end{document}
          EOF
          docker run --rm -v "$(pwd):/data" -w /data ${{ matrix.name }} latexindent test.tex
        if: "matrix.scheme == 'full'"
      - name: Login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}
        if: "github.ref == 'refs/heads/master' && (github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && inputs.deploy))"
      - name: Deploy
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.${{ matrix.os }}
          build-args: scheme=${{ matrix.scheme }}
          tags: ${{ env.TAGS }}
          push: true
        if: "github.ref == 'refs/heads/master' && (github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && inputs.deploy))"
